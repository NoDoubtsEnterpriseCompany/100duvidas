
<project name="100duvidas" default="default" basedir=".">
	<property name="src" value="\${basedir}/src" />
	<property name="build" value="\${basedir}/bin" />
	<property name="doc" value="doc" />
	<property name="sysLibs" value="libs" />
	<property name="classes.dir" value="classes" />
	<property name="instrumented.dir" value="instrumented" />
	<property name="report.dir" value="${basedir}/reports" />
	<property name="reports.xml.dir" value="${report.dir}/xml" />
	<property name="reports.html.dir" value="${report.dir}/html" />
	<property name="coverage.xml.dir" value="${report.dir}/coverage" />
	<property name="coverage.summaryxml.dir" value="${report.dir}/coverage/summary" />
	<property name="coverage.html.dir" value="${report.dir}/coverage/html" />



	<!-- change here for your cobertura folder destination -->
	<property name="cobertura.dir" value="/etc/cobertura-2.0.3" />

	<path id="cobertura.classpath">
		<fileset dir="${cobertura.dir}">
			<include name="cobertura.jar" />
			<include name="lib/**/*.jar" />
			<include name="cobertura-2.0.3.jar" />
			<include name="asm-4.1.jar" />
			<include name="asm-tree-4.1.jar" />
			<include name="log4j-1.2.9.jar" />
		</fileset>
	</path>

	<taskdef classpathref="cobertura.classpath" resource="tasks.properties" />


	<!-- ================================= 
		          target: testa      
		     ================================= -->
	<property file="build.properties" />



	<!-- criando diretÃ³rios -->


	<target name="init">
		<mkdir dir="${classes.dir}" />
		<mkdir dir="${report.dir}" />
		<mkdir dir="${instrumented.dir}" />
		<mkdir dir="${reports.xml.dir}" />
		<mkdir dir="${reports.html.dir}" />
		<mkdir dir="${coverage.xml.dir}" />
		<mkdir dir="${coverage.summaryxml.dir}" />
		<mkdir dir="${coverage.html.dir}" />

		<echo>Criando diretorio de build e dist.</echo>
		<mkdir dir="${build}" />
		<mkdir dir="${doc}" />
	</target>


	<path id="compile.classpath">
		<fileset dir="${sysLibs}">
			<include name="*.jar" />
			<include name="**.jar" />
			<include name="**/*.jar" />
		</fileset>
	</path>

	<!--compile -->
	<target name="compile" depends="init">
		<javac srcdir="src" destdir="${classes.dir}" debug="yes">
			<classpath refid="cobertura.classpath" />
			<classpath refid="compile.classpath" />
		</javac>
	</target>



	<!-- -->
	<!-- -->
	<!-- -->



	<!-- Instrument-->

	<target name="instrument" depends="init,compile">
		<!--
		   Remove the coverage data file and any old instrumentation.
		  -->
		<delete file="cobertura.ser" />
		<delete dir="${instrumented.dir}" />
		<!--
		   Instrument the application classes, writing the
		   instrumented classes into ${build.instrumented.dir}.
		  -->
		<cobertura-instrument todir="${instrumented.dir}">
			<!--
		    The following line causes instrument to ignore any
		    source line containing a reference to log4j, for the
		    purposes of coverage reporting.-->
			<classpath>
				<pathelement path="lib/*.jar" />
			</classpath>

			<ignore regex="org.apache.	.*" />
			<fileset dir="${classes.dir}">
				<!--
		     Instrument all the application classes, but
		     don't instrument the test classes.
		    -->
				<include name="**/*.class" />
				<exclude name="**/*Test.class" />
			</fileset>
		</cobertura-instrument>
	</target>
	<!-- -->
	<!-- -->
	<!-- -->


	<!--testa -->

	<target name="test" depends="init,compile">
		<junit fork="yes" dir="${basedir}" failureProperty="test.failed" printsummary="false">
			<!--
		    Note the classpath order: instrumented classes are before the
		    original (uninstrumented) classes.  This is important.
		   -->
			<classpath location="${instrumented.dir}" />
			<classpath location="${classes.dir}" />
			<classpath refid="compile.classpath" />
			<classpath>
				<pathelement path="lib/junit-4.11.jar" />
				<pathelement path="lib/junit.jar" />
			</classpath>
			<!--
		    The instrumented classes reference classes used by the
		    Cobertura runtime, so Cobertura and its dependencies
		    must be on your classpath.
		   -->
			<classpath refid="cobertura.classpath" />
			<formatter type="xml" />
			<test name="${testcase}" todir="${reports.xml.dir}" if="testcase" />
			<batchtest todir="${reports.xml.dir}" unless="testcase">
				<fileset dir="src">
					<include name="extractor/tests/*.java" />
				</fileset>
			</batchtest>
		</junit>



		<junitreport todir="${reports.xml.dir}">

			<fileset dir="${reports.xml.dir}">

				<include name="TEST-*.xml" />

			</fileset>

			<report format="frames" todir="${reports.html.dir}" />

		</junitreport>

	</target>



	<target name="coverage-check">

		<cobertura-check branchrate="34" totallinerate="100" />

	</target>



	<target name="coverage-report">

		<!--

		   Generate an XML file containing the coverage data using

		   the "srcdir" attribute.

		  -->

		<cobertura-report srcdir="src" destdir="${coverage.xml.dir}" format="xml" />

	</target>



	<target name="summary-coverage-report">

		<!--

		   Generate an summary XML file containing the coverage data using

		   the "srcdir" attribute.

		  -->

		<cobertura-report srcdir="src" destdir="${coverage.summaryxml.dir}" format="summaryXml" />

	</target>



	<target name="alternate-coverage-report">

		<!--

		   Generate a series of HTML files containing the coverage

		   data in a user-readable form using nested source filesets.

		  -->

		<cobertura-report destdir="${coverage.html.dir}">

			<fileset dir="src">

				<include name="**/*.java" />

				<include name="**/*.groovy" />

			</fileset>

		</cobertura-report>

	</target>



	<target name="clean" description="Remove all files created by the build/test process.">

		<delete dir="${classes.dir}" />

		<delete dir="${instrumented.dir}" />

		<delete dir="${reports.dir}" />

		<delete file="cobertura.log" />

		<delete file="cobertura.ser" />

	</target>



	<target name="coverage" depends="compile,instrument,test,coverage-report,summary-coverage-report,alternate-coverage-report" description="Compile, instrument ourself, run the tests and generate JUnit and coverage reports." />






</project>
